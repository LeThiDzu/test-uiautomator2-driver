<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.0 (Python 3.8.12 on linux)" generated="2025-06-09T03:30:00.386644" rpa="false" schemaversion="5">
<suite id="s1" name="DeviceFarm" source="/home/runner/work/test-uiautomator2-driver/test-uiautomator2-driver/test/DeviceFarm.robot">
<test id="s1-t1" name="Beta 1 - Test Enable wifi settings" line="11">
<kw name="Beta Setup" type="SETUP">
<kw name="Start Record Video" owner="commons">
<kw name="Replace String" owner="String">
<msg time="2025-06-09T03:30:00.943225" level="INFO">${video_name} = Beta_1_-_Test_Enable_wifi_settings</msg>
<var>${video_name}</var>
<arg>${TEST_NAME}</arg>
<arg>${SPACE}</arg>
<arg>_</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2025-06-09T03:30:00.942710" elapsed="0.000574"/>
</kw>
<kw name="Start Recording" owner="test_screenRecord">
<msg time="2025-06-09T03:30:00.972302" level="INFO">Started screen recording to Beta_1_-_Test_Enable_wifi_settings.mp4</msg>
<arg>${video_name}.mp4</arg>
<status status="PASS" start="2025-06-09T03:30:00.944012" elapsed="0.028707"/>
</kw>
<status status="PASS" start="2025-06-09T03:30:00.940745" elapsed="0.033298"/>
</kw>
<kw name="Open API Demos" owner="commons">
<kw name="Load Environment Variables" owner="load_env">
<msg time="2025-06-09T03:30:00.977025" level="INFO">${env_vars} = {'SHELL': '/bin/bash', 'SELENIUM_JAR_PATH': '/usr/share/java/selenium-server.jar', 'CONDA': '/usr/share/miniconda', 'GITHUB_WORKSPACE': '/home/runner/work/test-uiautomator2-driver/test-uiautomator2-dr...</msg>
<var>${env_vars}</var>
<status status="PASS" start="2025-06-09T03:30:00.975864" elapsed="0.001245"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${env_vars['PATH_TO_APK']}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-09T03:30:00.977857" elapsed="0.001371"/>
</kw>
<kw name="Open Application" owner="AppiumLibrary">
<arg>${env_vars['APPIUM_TEST_SERVER_HOST']}:${env_vars['APPIUM_TEST_SERVER_PORT']}</arg>
<arg>platformName=${env_vars['PLATFORM_NAME']}</arg>
<arg>platformVersion=${env_vars['PLATFORM_VERSION']}</arg>
<arg>deviceName=${env_vars['DEVICE_NAME']}</arg>
<arg>appPackage=${env_vars['APP_PACKAGE']}</arg>
<arg>appWaitActivity=${env_vars['APP_ACTIVITY']}</arg>
<arg>app=${env_vars['PATH_TO_APK']}</arg>
<arg>automationName=${env_vars['AUTOMATION_NAME']}</arg>
<arg>enforceXPath1=${True}</arg>
<doc>Opens a new application to given Appium server.
Capabilities of appium server, Android and iOS,
Please check https://appium.io/docs/en/2.1/cli/args/
| *Option*            | *Man.* | *Description*     |
| remote_url          | Yes    | Appium server url |
| alias               | no     | alias             |
| strict_ssl          | No     | allows you to send commands to an invalid certificate host like a self-signed one. |</doc>
<status status="PASS" start="2025-06-09T03:30:00.979703" elapsed="18.551278"/>
</kw>
<status status="PASS" start="2025-06-09T03:30:00.974950" elapsed="18.556594"/>
</kw>
<status status="PASS" start="2025-06-09T03:30:00.939811" elapsed="18.592057"/>
</kw>
<kw name="Tap On Element Test Keyword" owner="commons">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<kw name="Capture Page Screenshot" owner="AppiumLibrary">
<msg time="2025-06-09T03:30:49.946861" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;img src="data:image/png;base64, " width="800px"&gt;</msg>
<doc>Takes a screenshot of the current page and embeds it into the log.</doc>
<status status="PASS" start="2025-06-09T03:30:49.635382" elapsed="0.312231"/>
</kw>
<msg time="2025-06-09T03:30:49.948546" level="INFO">xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]</msg>
<msg time="2025-06-09T03:30:49.948851" level="FAIL">Element locator '//android.widget.TextView[@content-desc="Preference"]' did not match any elements after 30 seconds</msg>
<arg>${locator}</arg>
<arg>${global_timeout}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="FAIL" start="2025-06-09T03:30:19.534013" elapsed="30.415169">Element locator '//android.widget.TextView[@content-desc="Preference"]' did not match any elements after 30 seconds</status>
</kw>
<msg time="2025-06-09T03:30:49.949848" level="INFO">${is_element_visible} = False</msg>
<var>${is_element_visible}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${locator}</arg>
<arg>${global_timeout}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-06-09T03:30:19.533581" elapsed="30.418272"/>
</kw>
<if>
<branch type="IF" condition="${is_element_visible} == ${False}">
<kw name="Fail" owner="BuiltIn">
<msg time="2025-06-09T03:30:49.953477" level="FAIL">Menu Preference not visible after 30s</msg>
<arg>${element_name} not visible after ${global_timeout}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="FAIL" start="2025-06-09T03:30:49.953015" elapsed="0.000556">Menu Preference not visible after 30s</status>
</kw>
<status status="FAIL" start="2025-06-09T03:30:49.952481" elapsed="0.001534">Menu Preference not visible after 30s</status>
</branch>
<status status="FAIL" start="2025-06-09T03:30:49.952425" elapsed="0.001880">Menu Preference not visible after 30s</status>
</if>
<kw name="Get Element Attribute" owner="AppiumLibrary">
<var>${element_location}</var>
<arg>${locator}</arg>
<arg>bounds</arg>
<doc>Get element attribute using given attribute: name, value,...</doc>
<status status="NOT RUN" start="2025-06-09T03:30:49.954559" elapsed="0.000081"/>
</kw>
<kw name="Re Find All" owner="handle_elements_bounds">
<var>${matches}</var>
<arg>${element_location}</arg>
<doc>Find all occurrences of a pattern in a string using regex.</doc>
<status status="NOT RUN" start="2025-06-09T03:30:49.955034" elapsed="0.000077"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<var>${x_center}</var>
<arg>int((int(${matches[0]}) + int(${matches[2]})) / 2 )</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2025-06-09T03:30:49.955496" elapsed="0.000071"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<var>${y_center}</var>
<arg>int((int(${matches[1]}) + int(${matches[3]})) / 2 )</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2025-06-09T03:30:49.955906" elapsed="0.000067"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<var>@{position}</var>
<arg>${x_center}</arg>
<arg>${y_center}</arg>
<doc>Returns a list containing given items.</doc>
<status status="NOT RUN" start="2025-06-09T03:30:49.956308" elapsed="0.000097"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<var>@{positions}</var>
<arg>${position}</arg>
<doc>Returns a list containing given items.</doc>
<status status="NOT RUN" start="2025-06-09T03:30:49.956753" elapsed="0.000074"/>
</kw>
<kw name="Tap With Positions" owner="AppiumLibrary">
<arg>1000</arg>
<arg>@{positions}</arg>
<doc>Taps on a particular place with up to five fingers, holding for a
certain time</doc>
<status status="NOT RUN" start="2025-06-09T03:30:49.957199" elapsed="0.000075"/>
</kw>
<arg>Menu Preference</arg>
<arg>${menu_preference}</arg>
<status status="FAIL" start="2025-06-09T03:30:19.532714" elapsed="30.424900">Menu Preference not visible after 30s</status>
</kw>
<kw name="Tap On Element Test Keyword" owner="commons">
<arg>Preference dependencies</arg>
<arg>${preference_dependencies}</arg>
<status status="NOT RUN" start="2025-06-09T03:30:49.958233" elapsed="0.000093"/>
</kw>
<kw name="Select Checkbox" owner="commons">
<arg>Checkbox wifi</arg>
<arg>${checkBox_wifi}</arg>
<status status="NOT RUN" start="2025-06-09T03:30:49.958836" elapsed="0.000087"/>
</kw>
<kw name="Element Should Reach The State enabled" owner="commons" source_name="Element Should Reach The State ${state}">
<arg>Wifi settings</arg>
<arg>${wifi_settings}</arg>
<doc>Available state list:
checkable, checked, clickable, enabled, focusable, focused,
long-clickable, password, scrollable, selected, displayed</doc>
<status status="NOT RUN" start="2025-06-09T03:30:49.959609" elapsed="0.000100"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<arg>15s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" start="2025-06-09T03:30:49.960115" elapsed="0.000078"/>
</kw>
<kw name="Fail" owner="BuiltIn">
<arg>I want this test fail</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2025-06-09T03:30:49.960563" elapsed="0.000080"/>
</kw>
<kw name="Beta Teardown" type="TEARDOWN">
<kw name="Close API Demos" owner="commons">
<kw name="Close All Applications" owner="AppiumLibrary">
<doc>Closes all open applications.</doc>
<status status="PASS" start="2025-06-09T03:30:49.962279" elapsed="0.593192"/>
</kw>
<status status="PASS" start="2025-06-09T03:30:49.961797" elapsed="0.594171"/>
</kw>
<kw name="Stop Record Video" owner="commons">
<kw name="Replace String" owner="String">
<msg time="2025-06-09T03:30:50.557602" level="INFO">${video_name} = Beta_1_-_Test_Enable_wifi_settings</msg>
<var>${video_name}</var>
<arg>${TEST_NAME}</arg>
<arg>${SPACE}</arg>
<arg>_</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2025-06-09T03:30:50.557169" elapsed="0.000474"/>
</kw>
<kw name="Stop Recording" owner="test_screenRecord">
<msg time="2025-06-09T03:30:50.558699" level="INFO">Stopped screen recording to Beta_1_-_Test_Enable_wifi_settings.mp4</msg>
<arg>${video_name}.mp4</arg>
<status status="PASS" start="2025-06-09T03:30:50.558196" elapsed="0.000561"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${TEST_STATUS}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-09T03:30:50.559232" elapsed="0.000332"/>
</kw>
<if>
<branch type="IF" condition="&quot;${TEST_STATUS}&quot; == &quot;FAIL&quot;">
<kw name="Pull Video" owner="test_screenRecord">
<arg>${video_name}.mp4</arg>
<arg>${record_output}</arg>
<status status="PASS" start="2025-06-09T03:30:50.560245" elapsed="0.059478"/>
</kw>
<kw name="File Should Exist" owner="OperatingSystem">
<msg time="2025-06-09T03:30:50.621899" level="INFO" html="true">File '&lt;a href="file:///home/runner/work/test-uiautomator2-driver/test-uiautomator2-driver/TestRecord/Beta_1_-_Test_Enable_wifi_settings.mp4"&gt;/home/runner/work/test-uiautomator2-driver/test-uiautomator2-driver/TestRecord/Beta_1_-_Test_Enable_wifi_settings.mp4&lt;/a&gt;' exists.</msg>
<arg>${record_output}/${video_name}.mp4</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<status status="PASS" start="2025-06-09T03:30:50.621141" elapsed="0.000957"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-09T03:30:55.623440" level="INFO">Slept 5 seconds.</msg>
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-09T03:30:50.622940" elapsed="5.000676"/>
</kw>
<status status="PASS" start="2025-06-09T03:30:50.559869" elapsed="5.064252"/>
</branch>
<status status="PASS" start="2025-06-09T03:30:50.559840" elapsed="5.064485"/>
</if>
<kw name="Remove Video" owner="test_screenRecord">
<arg>${video_name}.mp4</arg>
<status status="PASS" start="2025-06-09T03:30:55.624590" elapsed="0.021833"/>
</kw>
<status status="PASS" start="2025-06-09T03:30:50.556637" elapsed="5.090476"/>
</kw>
<status status="PASS" start="2025-06-09T03:30:49.961235" elapsed="5.686155"/>
</kw>
<status status="FAIL" start="2025-06-09T03:30:00.938636" elapsed="54.709089">Menu Preference not visible after 30s</status>
</test>
<test id="s1-t2" name="Beta 2 - Test send message" line="20">
<kw name="Beta Setup" type="SETUP">
<kw name="Start Record Video" owner="commons">
<kw name="Replace String" owner="String">
<msg time="2025-06-09T03:30:55.655097" level="INFO">${video_name} = Beta_2_-_Test_send_message</msg>
<var>${video_name}</var>
<arg>${TEST_NAME}</arg>
<arg>${SPACE}</arg>
<arg>_</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2025-06-09T03:30:55.654768" elapsed="0.000457"/>
</kw>
<kw name="Start Recording" owner="test_screenRecord">
<msg time="2025-06-09T03:30:55.668396" level="INFO">Started screen recording to Beta_2_-_Test_send_message.mp4</msg>
<arg>${video_name}.mp4</arg>
<status status="PASS" start="2025-06-09T03:30:55.655679" elapsed="0.012953"/>
</kw>
<status status="PASS" start="2025-06-09T03:30:55.654396" elapsed="0.015023"/>
</kw>
<kw name="Open API Demos" owner="commons">
<kw name="Load Environment Variables" owner="load_env">
<msg time="2025-06-09T03:30:55.671646" level="INFO">${env_vars} = {'SHELL': '/bin/bash', 'SELENIUM_JAR_PATH': '/usr/share/java/selenium-server.jar', 'CONDA': '/usr/share/miniconda', 'GITHUB_WORKSPACE': '/home/runner/work/test-uiautomator2-driver/test-uiautomator2-dr...</msg>
<var>${env_vars}</var>
<status status="PASS" start="2025-06-09T03:30:55.670844" elapsed="0.000865"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${env_vars['PATH_TO_APK']}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-09T03:30:55.672307" elapsed="0.000877"/>
</kw>
<kw name="Open Application" owner="AppiumLibrary">
<arg>${env_vars['APPIUM_TEST_SERVER_HOST']}:${env_vars['APPIUM_TEST_SERVER_PORT']}</arg>
<arg>platformName=${env_vars['PLATFORM_NAME']}</arg>
<arg>platformVersion=${env_vars['PLATFORM_VERSION']}</arg>
<arg>deviceName=${env_vars['DEVICE_NAME']}</arg>
<arg>appPackage=${env_vars['APP_PACKAGE']}</arg>
<arg>appWaitActivity=${env_vars['APP_ACTIVITY']}</arg>
<arg>app=${env_vars['PATH_TO_APK']}</arg>
<arg>automationName=${env_vars['AUTOMATION_NAME']}</arg>
<arg>enforceXPath1=${True}</arg>
<doc>Opens a new application to given Appium server.
Capabilities of appium server, Android and iOS,
Please check https://appium.io/docs/en/2.1/cli/args/
| *Option*            | *Man.* | *Description*     |
| remote_url          | Yes    | Appium server url |
| alias               | no     | alias             |
| strict_ssl          | No     | allows you to send commands to an invalid certificate host like a self-signed one. |</doc>
<status status="PASS" start="2025-06-09T03:30:55.673601" elapsed="4.463607"/>
</kw>
<status status="PASS" start="2025-06-09T03:30:55.670137" elapsed="4.467738"/>
</kw>
<status status="PASS" start="2025-06-09T03:30:55.653919" elapsed="4.484260"/>
</kw>
<kw name="Tap On Element Test Keyword" owner="commons">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<kw name="Capture Page Screenshot" owner="AppiumLibrary">
<msg time="2025-06-09T03:31:30.407312" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;img src="data:image/png;base64, " width="800px"&gt;</msg>
<doc>Takes a screenshot of the current page and embeds it into the log.</doc>
<status status="PASS" start="2025-06-09T03:31:30.248822" elapsed="0.158955"/>
</kw>
<msg time="2025-06-09T03:31:30.408425" level="INFO">xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]
xpath criteria: //android.widget.TextView[@content-desc="OS"]</msg>
<msg time="2025-06-09T03:31:30.408644" level="FAIL">Element locator '//android.widget.TextView[@content-desc="OS"]' did not match any elements after 30 seconds</msg>
<arg>${locator}</arg>
<arg>${global_timeout}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="FAIL" start="2025-06-09T03:31:00.140049" elapsed="30.268785">Element locator '//android.widget.TextView[@content-desc="OS"]' did not match any elements after 30 seconds</status>
</kw>
<msg time="2025-06-09T03:31:30.409286" level="INFO">${is_element_visible} = False</msg>
<var>${is_element_visible}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${locator}</arg>
<arg>${global_timeout}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-06-09T03:31:00.139702" elapsed="30.269621"/>
</kw>
<if>
<branch type="IF" condition="${is_element_visible} == ${False}">
<kw name="Fail" owner="BuiltIn">
<msg time="2025-06-09T03:31:30.410857" level="FAIL">Menu OS not visible after 30s</msg>
<arg>${element_name} not visible after ${global_timeout}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="FAIL" start="2025-06-09T03:31:30.410237" elapsed="0.000701">Menu OS not visible after 30s</status>
</kw>
<status status="FAIL" start="2025-06-09T03:31:30.409825" elapsed="0.001444">Menu OS not visible after 30s</status>
</branch>
<status status="FAIL" start="2025-06-09T03:31:30.409784" elapsed="0.001673">Menu OS not visible after 30s</status>
</if>
<kw name="Get Element Attribute" owner="AppiumLibrary">
<var>${element_location}</var>
<arg>${locator}</arg>
<arg>bounds</arg>
<doc>Get element attribute using given attribute: name, value,...</doc>
<status status="NOT RUN" start="2025-06-09T03:31:30.411624" elapsed="0.000063"/>
</kw>
<kw name="Re Find All" owner="handle_elements_bounds">
<var>${matches}</var>
<arg>${element_location}</arg>
<doc>Find all occurrences of a pattern in a string using regex.</doc>
<status status="NOT RUN" start="2025-06-09T03:31:30.411956" elapsed="0.000057"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<var>${x_center}</var>
<arg>int((int(${matches[0]}) + int(${matches[2]})) / 2 )</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2025-06-09T03:31:30.412266" elapsed="0.000055"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<var>${y_center}</var>
<arg>int((int(${matches[1]}) + int(${matches[3]})) / 2 )</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2025-06-09T03:31:30.412584" elapsed="0.000053"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<var>@{position}</var>
<arg>${x_center}</arg>
<arg>${y_center}</arg>
<doc>Returns a list containing given items.</doc>
<status status="NOT RUN" start="2025-06-09T03:31:30.412882" elapsed="0.000051"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<var>@{positions}</var>
<arg>${position}</arg>
<doc>Returns a list containing given items.</doc>
<status status="NOT RUN" start="2025-06-09T03:31:30.413175" elapsed="0.000050"/>
</kw>
<kw name="Tap With Positions" owner="AppiumLibrary">
<arg>1000</arg>
<arg>@{positions}</arg>
<doc>Taps on a particular place with up to five fingers, holding for a
certain time</doc>
<status status="NOT RUN" start="2025-06-09T03:31:30.413487" elapsed="0.000050"/>
</kw>
<arg>Menu OS</arg>
<arg>${menu_os}</arg>
<status status="FAIL" start="2025-06-09T03:31:00.138972" elapsed="30.274775">Menu OS not visible after 30s</status>
</kw>
<kw name="Tap On Element Test Keyword" owner="commons">
<arg>SMS Messaging</arg>
<arg>${sms_messaging}</arg>
<status status="NOT RUN" start="2025-06-09T03:31:30.414146" elapsed="0.000062"/>
</kw>
<kw name="Select Checkbox" owner="commons">
<arg>Enable SMS broadcast receiver</arg>
<arg>${checkBox_enable_sms_broadcast_receiver}</arg>
<status status="NOT RUN" start="2025-06-09T03:31:30.414539" elapsed="0.000060"/>
</kw>
<kw name="Input Text On Element" owner="commons">
<arg>Text field Recipient</arg>
<arg>${txt_recipient}</arg>
<arg>Test ABC def GhY</arg>
<status status="NOT RUN" start="2025-06-09T03:31:30.414892" elapsed="0.000055"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<arg>15s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" start="2025-06-09T03:31:30.415211" elapsed="0.000057"/>
</kw>
<kw name="Fail" owner="BuiltIn">
<arg>I want this test fail</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2025-06-09T03:31:30.415551" elapsed="0.000051"/>
</kw>
<kw name="Beta Teardown" type="TEARDOWN">
<kw name="Close API Demos" owner="commons">
<kw name="Close All Applications" owner="AppiumLibrary">
<doc>Closes all open applications.</doc>
<status status="PASS" start="2025-06-09T03:31:30.416678" elapsed="0.391995"/>
</kw>
<status status="PASS" start="2025-06-09T03:31:30.416362" elapsed="0.392855"/>
</kw>
<kw name="Stop Record Video" owner="commons">
<kw name="Replace String" owner="String">
<msg time="2025-06-09T03:31:30.811445" level="INFO">${video_name} = Beta_2_-_Test_send_message</msg>
<var>${video_name}</var>
<arg>${TEST_NAME}</arg>
<arg>${SPACE}</arg>
<arg>_</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2025-06-09T03:31:30.810832" elapsed="0.000679"/>
</kw>
<kw name="Stop Recording" owner="test_screenRecord">
<msg time="2025-06-09T03:31:30.812691" level="INFO">Stopped screen recording to Beta_2_-_Test_send_message.mp4</msg>
<arg>${video_name}.mp4</arg>
<status status="PASS" start="2025-06-09T03:31:30.812263" elapsed="0.000520"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${TEST_STATUS}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-09T03:31:30.813427" elapsed="0.000330"/>
</kw>
<if>
<branch type="IF" condition="&quot;${TEST_STATUS}&quot; == &quot;FAIL&quot;">
<kw name="Pull Video" owner="test_screenRecord">
<arg>${video_name}.mp4</arg>
<arg>${record_output}</arg>
<status status="PASS" start="2025-06-09T03:31:30.814477" elapsed="0.011660"/>
</kw>
<kw name="File Should Exist" owner="OperatingSystem">
<msg time="2025-06-09T03:31:30.828112" level="INFO" html="true">File '&lt;a href="file:///home/runner/work/test-uiautomator2-driver/test-uiautomator2-driver/TestRecord/Beta_2_-_Test_send_message.mp4"&gt;/home/runner/work/test-uiautomator2-driver/test-uiautomator2-driver/TestRecord/Beta_2_-_Test_send_message.mp4&lt;/a&gt;' exists.</msg>
<arg>${record_output}/${video_name}.mp4</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<status status="PASS" start="2025-06-09T03:31:30.827429" elapsed="0.000788"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-09T03:31:35.829389" level="INFO">Slept 5 seconds.</msg>
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-09T03:31:30.828910" elapsed="5.000640"/>
</kw>
<status status="PASS" start="2025-06-09T03:31:30.814069" elapsed="5.015989"/>
</branch>
<status status="PASS" start="2025-06-09T03:31:30.814034" elapsed="5.016224"/>
</if>
<kw name="Remove Video" owner="test_screenRecord">
<arg>${video_name}.mp4</arg>
<status status="PASS" start="2025-06-09T03:31:35.830499" elapsed="0.016771"/>
</kw>
<status status="PASS" start="2025-06-09T03:31:30.810012" elapsed="5.037968"/>
</kw>
<status status="PASS" start="2025-06-09T03:31:30.415973" elapsed="5.432220"/>
</kw>
<status status="FAIL" start="2025-06-09T03:30:55.653230" elapsed="40.195229">Menu OS not visible after 30s</status>
</test>
<test id="s1-t3" name="Beta 3 - Test record video" line="28">
<kw name="Beta Setup" type="SETUP">
<kw name="Start Record Video" owner="commons">
<kw name="Replace String" owner="String">
<msg time="2025-06-09T03:31:35.855703" level="INFO">${video_name} = Beta_3_-_Test_record_video</msg>
<var>${video_name}</var>
<arg>${TEST_NAME}</arg>
<arg>${SPACE}</arg>
<arg>_</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2025-06-09T03:31:35.855396" elapsed="0.000345"/>
</kw>
<kw name="Start Recording" owner="test_screenRecord">
<msg time="2025-06-09T03:31:35.867896" level="INFO">Started screen recording to Beta_3_-_Test_record_video.mp4</msg>
<arg>${video_name}.mp4</arg>
<status status="PASS" start="2025-06-09T03:31:35.856195" elapsed="0.011943"/>
</kw>
<status status="PASS" start="2025-06-09T03:31:35.855019" elapsed="0.013899"/>
</kw>
<kw name="Open API Demos" owner="commons">
<kw name="Load Environment Variables" owner="load_env">
<msg time="2025-06-09T03:31:35.870641" level="INFO">${env_vars} = {'SHELL': '/bin/bash', 'SELENIUM_JAR_PATH': '/usr/share/java/selenium-server.jar', 'CONDA': '/usr/share/miniconda', 'GITHUB_WORKSPACE': '/home/runner/work/test-uiautomator2-driver/test-uiautomator2-dr...</msg>
<var>${env_vars}</var>
<status status="PASS" start="2025-06-09T03:31:35.869960" elapsed="0.000719"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${env_vars['PATH_TO_APK']}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-09T03:31:35.871076" elapsed="0.000797"/>
</kw>
<kw name="Open Application" owner="AppiumLibrary">
<arg>${env_vars['APPIUM_TEST_SERVER_HOST']}:${env_vars['APPIUM_TEST_SERVER_PORT']}</arg>
<arg>platformName=${env_vars['PLATFORM_NAME']}</arg>
<arg>platformVersion=${env_vars['PLATFORM_VERSION']}</arg>
<arg>deviceName=${env_vars['DEVICE_NAME']}</arg>
<arg>appPackage=${env_vars['APP_PACKAGE']}</arg>
<arg>appWaitActivity=${env_vars['APP_ACTIVITY']}</arg>
<arg>app=${env_vars['PATH_TO_APK']}</arg>
<arg>automationName=${env_vars['AUTOMATION_NAME']}</arg>
<arg>enforceXPath1=${True}</arg>
<doc>Opens a new application to given Appium server.
Capabilities of appium server, Android and iOS,
Please check https://appium.io/docs/en/2.1/cli/args/
| *Option*            | *Man.* | *Description*     |
| remote_url          | Yes    | Appium server url |
| alias               | no     | alias             |
| strict_ssl          | No     | allows you to send commands to an invalid certificate host like a self-signed one. |</doc>
<status status="PASS" start="2025-06-09T03:31:35.872266" elapsed="2.926535"/>
</kw>
<status status="PASS" start="2025-06-09T03:31:35.869410" elapsed="2.929848"/>
</kw>
<status status="PASS" start="2025-06-09T03:31:35.854514" elapsed="2.945738"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>touchaku</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-09T03:31:38.801014" elapsed="0.000502"/>
</kw>
<kw name="Tap On Element Test Keyword" owner="commons">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<kw name="Capture Page Screenshot" owner="AppiumLibrary">
<msg time="2025-06-09T03:32:08.926323" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;img src="data:image/png;base64, " width="800px"&gt;</msg>
<doc>Takes a screenshot of the current page and embeds it into the log.</doc>
<status status="PASS" start="2025-06-09T03:32:08.892836" elapsed="0.033977"/>
</kw>
<msg time="2025-06-09T03:32:08.927434" level="INFO">xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]
xpath criteria: //android.widget.TextView[@content-desc="Preference"]</msg>
<msg time="2025-06-09T03:32:08.927664" level="FAIL">Element locator '//android.widget.TextView[@content-desc="Preference"]' did not match any elements after 30 seconds</msg>
<arg>${locator}</arg>
<arg>${global_timeout}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="FAIL" start="2025-06-09T03:31:38.804974" elapsed="30.122874">Element locator '//android.widget.TextView[@content-desc="Preference"]' did not match any elements after 30 seconds</status>
</kw>
<msg time="2025-06-09T03:32:08.928232" level="INFO">${is_element_visible} = False</msg>
<var>${is_element_visible}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${locator}</arg>
<arg>${global_timeout}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-06-09T03:31:38.803593" elapsed="30.124671"/>
</kw>
<if>
<branch type="IF" condition="${is_element_visible} == ${False}">
<kw name="Fail" owner="BuiltIn">
<msg time="2025-06-09T03:32:08.929417" level="FAIL">Menu Preference not visible after 30s</msg>
<arg>${element_name} not visible after ${global_timeout}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="FAIL" start="2025-06-09T03:32:08.929056" elapsed="0.000430">Menu Preference not visible after 30s</status>
</kw>
<status status="FAIL" start="2025-06-09T03:32:08.928667" elapsed="0.001126">Menu Preference not visible after 30s</status>
</branch>
<status status="FAIL" start="2025-06-09T03:32:08.928628" elapsed="0.001547">Menu Preference not visible after 30s</status>
</if>
<kw name="Get Element Attribute" owner="AppiumLibrary">
<var>${element_location}</var>
<arg>${locator}</arg>
<arg>bounds</arg>
<doc>Get element attribute using given attribute: name, value,...</doc>
<status status="NOT RUN" start="2025-06-09T03:32:08.930361" elapsed="0.000068"/>
</kw>
<kw name="Re Find All" owner="handle_elements_bounds">
<var>${matches}</var>
<arg>${element_location}</arg>
<doc>Find all occurrences of a pattern in a string using regex.</doc>
<status status="NOT RUN" start="2025-06-09T03:32:08.930699" elapsed="0.000056"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<var>${x_center}</var>
<arg>int((int(${matches[0]}) + int(${matches[2]})) / 2 )</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2025-06-09T03:32:08.931009" elapsed="0.000052"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<var>${y_center}</var>
<arg>int((int(${matches[1]}) + int(${matches[3]})) / 2 )</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2025-06-09T03:32:08.931309" elapsed="0.000078"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<var>@{position}</var>
<arg>${x_center}</arg>
<arg>${y_center}</arg>
<doc>Returns a list containing given items.</doc>
<status status="NOT RUN" start="2025-06-09T03:32:08.931646" elapsed="0.000054"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<var>@{positions}</var>
<arg>${position}</arg>
<doc>Returns a list containing given items.</doc>
<status status="NOT RUN" start="2025-06-09T03:32:08.931940" elapsed="0.000050"/>
</kw>
<kw name="Tap With Positions" owner="AppiumLibrary">
<arg>1000</arg>
<arg>@{positions}</arg>
<doc>Taps on a particular place with up to five fingers, holding for a
certain time</doc>
<status status="NOT RUN" start="2025-06-09T03:32:08.932249" elapsed="0.000053"/>
</kw>
<arg>Menu Preference</arg>
<arg>${menu_preference}</arg>
<status status="FAIL" start="2025-06-09T03:31:38.802268" elapsed="30.130303">Menu Preference not visible after 30s</status>
</kw>
<kw name="Sleep" owner="BuiltIn">
<arg>10s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" start="2025-06-09T03:32:08.932841" elapsed="0.000055"/>
</kw>
<kw name="Beta Teardown" type="TEARDOWN">
<kw name="Close API Demos" owner="commons">
<kw name="Close All Applications" owner="AppiumLibrary">
<doc>Closes all open applications.</doc>
<status status="PASS" start="2025-06-09T03:32:08.934033" elapsed="0.313828"/>
</kw>
<status status="PASS" start="2025-06-09T03:32:08.933715" elapsed="0.318128"/>
</kw>
<kw name="Stop Record Video" owner="commons">
<kw name="Replace String" owner="String">
<msg time="2025-06-09T03:32:09.254144" level="INFO">${video_name} = Beta_3_-_Test_record_video</msg>
<var>${video_name}</var>
<arg>${TEST_NAME}</arg>
<arg>${SPACE}</arg>
<arg>_</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2025-06-09T03:32:09.253744" elapsed="0.000449"/>
</kw>
<kw name="Stop Recording" owner="test_screenRecord">
<msg time="2025-06-09T03:32:09.256361" level="INFO">Stopped screen recording to Beta_3_-_Test_record_video.mp4</msg>
<arg>${video_name}.mp4</arg>
<status status="PASS" start="2025-06-09T03:32:09.255771" elapsed="0.000920"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${TEST_STATUS}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-09T03:32:09.257247" elapsed="0.002358"/>
</kw>
<if>
<branch type="IF" condition="&quot;${TEST_STATUS}&quot; == &quot;FAIL&quot;">
<kw name="Pull Video" owner="test_screenRecord">
<arg>${video_name}.mp4</arg>
<arg>${record_output}</arg>
<status status="PASS" start="2025-06-09T03:32:09.260307" elapsed="0.012865"/>
</kw>
<kw name="File Should Exist" owner="OperatingSystem">
<msg time="2025-06-09T03:32:09.275413" level="INFO" html="true">File '&lt;a href="file:///home/runner/work/test-uiautomator2-driver/test-uiautomator2-driver/TestRecord/Beta_3_-_Test_record_video.mp4"&gt;/home/runner/work/test-uiautomator2-driver/test-uiautomator2-driver/TestRecord/Beta_3_-_Test_record_video.mp4&lt;/a&gt;' exists.</msg>
<arg>${record_output}/${video_name}.mp4</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<status status="PASS" start="2025-06-09T03:32:09.274656" elapsed="0.000889"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-09T03:32:14.276962" level="INFO">Slept 5 seconds.</msg>
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-09T03:32:09.276386" elapsed="5.000752"/>
</kw>
<status status="PASS" start="2025-06-09T03:32:09.259941" elapsed="5.017813"/>
</branch>
<status status="PASS" start="2025-06-09T03:32:09.259903" elapsed="5.018161"/>
</if>
<kw name="Remove Video" owner="test_screenRecord">
<arg>${video_name}.mp4</arg>
<status status="PASS" start="2025-06-09T03:32:14.278376" elapsed="0.018244"/>
</kw>
<status status="PASS" start="2025-06-09T03:32:09.253088" elapsed="5.044297"/>
</kw>
<status status="PASS" start="2025-06-09T03:32:08.933304" elapsed="5.364326"/>
</kw>
<status status="FAIL" start="2025-06-09T03:31:35.853849" elapsed="38.444019">Menu Preference not visible after 30s</status>
</test>
<status status="FAIL" start="2025-06-09T03:30:00.440201" elapsed="133.863332"/>
</suite>
<statistics>
<total>
<stat pass="0" fail="3" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="0" fail="3" skip="0" id="s1" name="DeviceFarm">DeviceFarm</stat>
</suite>
</statistics>
<errors>
<msg time="2025-06-09T03:30:00.936647" level="ERROR">Error in file '/home/runner/work/test-uiautomator2-driver/test-uiautomator2-driver/pages/commons.resource' on line 13: Resource file 'OS/ChildMenu.resource' does not exist.</msg>
<msg time="2025-06-09T03:30:00.936946" level="ERROR">Error in file '/home/runner/work/test-uiautomator2-driver/test-uiautomator2-driver/pages/commons.resource' on line 14: Resource file 'OS/SMSMessaging.resource' does not exist.</msg>
</errors>
</robot>
